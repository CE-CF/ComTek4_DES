

Engineering Practices for Building Quality Software


Agile embraces change which means that team should be able to effectively make changes to the system as team learns about users and market.  To be good at effectively making changes to the system, teams need to have engineering rigor and excellence else embracing change becomes very painful and expensive.  

In this course, you will learn about engineering practices and processes that agile and traditional teams use to make sure the team is prepared for change. In additional, you will also learn about practices, techniques and processes that can help team build high quality software. You will also learn how to calculate a variety of quantitative metrics related to software quality.

This is an intermediate course, intended for learners with a background in software development. To succeed in the course, you should have experience developing in modern programming languages (e.g., Java, C#, Python, JavaScript), an understanding of software development lifecycle models, familiarity with UML diagrams (class and sequence diagrams), and a desire to better understand quality aspects of software development beyond program correctness.

At the end of this course, you will be able to comfortably and effectively participate in various techniques and processes for building secure and high quality software.



What is Quality Software? 6:49


What is good design? 5:12


Measuring Coupling 6:00
Measuring Cohesion 2:53
Additional Measures of Quality 9:35

Introduction to Patterns and the Observer Pattern 5:33
Strategy Pattern 6:55
Adapter Pattern 6:09

What is Software Architecture? 4:12
Architectural Styles 5:16
View, Viewpoint, and Perspective 4:31
Writing Scenarios 7:42

Security Perspective 6:05
Attack Trees 5:43
Security Tactics 6:12

Code Style 11:46
Code Style Examples 5:55

Debugging 8:09
Static Analysis 4:01

Commenting 10:26

Version Control Systems 12:22
Build Process 7:57

Test Selection 11:39
Test Adequacy 5:53
Test-Driven Development 3:39

Continuous Integration 3:48
Continuous Delivery / Continuous Deployment 4:34
